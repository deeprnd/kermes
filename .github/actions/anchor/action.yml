name: 'Setup Anchor'
description: 'Sets up an Anchor development environment.'

branding:
  icon: anchor
  color: blue

inputs:
  solana-cluster:
    description: 'The cluster to use for the solana sdk.'
    required: false
    default: 'devnet'
  solana-key:
    description: 'The private key to use for the solana sdk.'
    required: false
  rust-toolchain-version:
    description: 'The version of the Rust toolchain to use.'
    required: false
    default: 'nightly-2024-11-19'  # Default value, can be overridden
  node-version:
    description: 'The version of node to use.'
    default: 'v23.8.0'
  solana-version:
    description: 'The version of solana to use.'
    default: 'v2.1.14'
  anchor-version:
    description: 'The version of anchor to use.'
    default: 'v0.30.1'

runs:
  using: "composite"
  steps:
    - name: Setup rustc
      run: |
        rustup toolchain install ${{ inputs.rust-toolchain-version }}
        rustup default ${{ inputs.rust-toolchain-version }}
        rustup component add rustfmt clippy --toolchain ${{ inputs.rust-toolchain-version }}
        echo "RUST_LOG=" >> $GITHUB_ENV
      shell: bash
    - name: Cache rust
      uses: actions/cache@v4
      continue-on-error: true
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          **/target/
        key: rust-cache-${{ inputs.rust-toolchain-version }}-${{ github.job }}-${{ hashFiles('**/Cargo.toml') }}
    - name: Setup Yarn
      uses: ./.github/actions/yarn
      with:
        node-version: ${{ inputs.node-version }}
    - name: Install Solana CLI
      run: |
        wget -qO- "https://release.anza.xyz/${{ inputs.solana-version }}/solana-release-x86_64-unknown-linux-gnu.tar.bz2" | tar -xvj
        echo "$PWD/solana-release/bin" >> $GITHUB_PATH
      shell: bash
    - name: Install Anchor CLI
      run: |
        anchor_version=${{ inputs.anchor-version }}
        npm install -g @coral-xyz/anchor-cli@${anchor_version#v}
      shell: bash
    - name: Configure Solana CLI
      run: |
        solana config set --url ${{ inputs.solana-cluster }}
        if [ -z "${{ inputs.solana-key }}" ]; then
          solana-keygen new --no-bip39-passphrase
        else
          echo "${{ inputs.solana-key }}" > ~/.config/solana/id.json
        fi
        solana airdrop 1 || true
      shell: bash
    - name: Log Installed Tools
      run: |
        echo "rustc: $(rustc --version)"
        echo "node: $(node --version)"
        echo "solana: $(solana --version)"
        echo "anchor: $(anchor --version)"
      shell: bash